{"ast":null,"code":"var _jsxFileName = \"/Users/lorenzofranceschi/Projects/MemoryGame/memory/src/App.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Board from \"./components/BoardCompoent/Board\";\nimport ButtonField from \"./components/ButtonFieldComponent/ButtonField\";\nimport PageContent from \"./components/PageContentComponent/PageContent\";\nimport TextField from \"./components/TextFieldComponent/TextField\";\nimport { TEXT_TYPE, VARIABLES } from \"./config/variables\";\nimport gameService from \"./services/gameService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [couplesFound, setCouplesFound] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const initGame = () => {\n    setCards(gameService.shuffleCards());\n    setCouplesFound(0);\n    setTurns(0);\n    setChoiceOne(null);\n    setChoiceTwo(null);\n  };\n  const nextTurn = () => {\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  useEffect(() => {\n    initGame();\n  }, []);\n  useEffect(() => {\n    console.log(\"CARDS: \", cards);\n  }, [cards]);\n  return /*#__PURE__*/_jsxDEV(PageContent, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      text: \"MEMORY\",\n      tag: TEXT_TYPE.TITLE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        text: \"#Turn: \" + turns,\n        tag: TEXT_TYPE.PARAGRAPH\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        text: \"#Couple found: \" + couplesFound + \"/\" + VARIABLES.NUM_COPPIE,\n        tag: TEXT_TYPE.PARAGRAPH\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonField, {\n      title: \"New Game\",\n      onClick: initGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      cards: cards,\n      setCards: setCards,\n      choiceOne: choiceOne,\n      setChoiceOne: setChoiceOne,\n      choiceTwo: choiceTwo,\n      setChoiceTwo: setChoiceTwo,\n      coupleFound: couplesFound,\n      setCouplesFound: setCouplesFound,\n      nextTurn: nextTurn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zoNa7Tq9m6f6Oiwbo+GZP2q4qkA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createContext","useEffect","useState","Board","ButtonField","PageContent","TextField","TEXT_TYPE","VARIABLES","gameService","jsxDEV","_jsxDEV","UserContext","App","_s","cards","setCards","turns","setTurns","couplesFound","setCouplesFound","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","initGame","shuffleCards","nextTurn","prevTurns","console","log","children","text","tag","TITLE","fileName","_jsxFileName","lineNumber","columnNumber","className","PARAGRAPH","NUM_COPPIE","title","onClick","coupleFound","_c","$RefreshReg$"],"sources":["/Users/lorenzofranceschi/Projects/MemoryGame/memory/src/App.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Board from \"./components/BoardCompoent/Board\";\nimport ButtonField from \"./components/ButtonFieldComponent/ButtonField\";\nimport PageContent from \"./components/PageContentComponent/PageContent\";\nimport TextField from \"./components/TextFieldComponent/TextField\";\nimport { TEXT_TYPE, VARIABLES } from \"./config/variables\";\nimport gameService from \"./services/gameService\";\n\nexport const UserContext = createContext();\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [couplesFound, setCouplesFound] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  const initGame = () => {\n    setCards(gameService.shuffleCards());\n    setCouplesFound(0);\n    setTurns(0);\n    setChoiceOne(null);\n    setChoiceTwo(null);\n  };\n\n  const nextTurn = () => {\n    setTurns((prevTurns) => prevTurns + 1);\n  };\n\n  useEffect(() => {\n    initGame();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"CARDS: \", cards);\n  }, [cards]);\n\n  return (\n    <PageContent>\n      <TextField text={\"MEMORY\"} tag={TEXT_TYPE.TITLE} />\n      <div className=\"info\">\n        <TextField text={\"#Turn: \" + turns} tag={TEXT_TYPE.PARAGRAPH} />\n        <TextField\n          text={\"#Couple found: \" + couplesFound + \"/\" + VARIABLES.NUM_COPPIE}\n          tag={TEXT_TYPE.PARAGRAPH}\n        />\n      </div>\n\n      <ButtonField title={\"New Game\"} onClick={initGame} />\n      <Board\n        cards={cards}\n        setCards={setCards}\n        choiceOne={choiceOne}\n        setChoiceOne={setChoiceOne}\n        choiceTwo={choiceTwo}\n        setChoiceTwo={setChoiceTwo}\n        coupleFound={couplesFound}\n        setCouplesFound={setCouplesFound}\n        nextTurn={nextTurn}\n      />\n    </PageContent>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
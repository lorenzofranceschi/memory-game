{"ast":null,"code":"var _jsxFileName = \"/Users/lorenzofranceschi/Projects/MemoryGame/memory/src/App.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Board from \"./components/BoardCompoent/Board\";\nimport ButtonField from \"./components/ButtonFieldComponent/ButtonField\";\nimport PageContent from \"./components/PageContentComponent/PageContent\";\nimport TextField from \"./components/TextFieldComponent/TextField\";\nimport { TEXT_TYPE, VARIABLES } from \"./config/variables\";\nimport { useGameInfo } from \"./context/GameContext\";\nimport gameService from \"./services/gameService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const {\n    cards,\n    setCards,\n    turns,\n    setTurns,\n    couplesFound,\n    setCouplesFound,\n    setChoiceOne,\n    setChoiceTwo\n  } = useGameInfo();\n  const initGame = () => {\n    setCards(gameService.shuffleCards());\n    setCouplesFound(0);\n    setTurns(0);\n    setChoiceOne(null);\n    setChoiceTwo(null);\n  };\n  const nextTurn = () => {\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  useEffect(() => {\n    initGame();\n  }, []);\n  useEffect(() => {\n    console.log(\"CARDS: \", cards);\n  }, [cards]);\n  return /*#__PURE__*/_jsxDEV(PageContent, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      text: \"MEMORY\",\n      tag: TEXT_TYPE.TITLE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        text: \"#Turn: \" + turns,\n        tag: TEXT_TYPE.PARAGRAPH\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        text: \"#Couple found: \" + couplesFound + \"/\" + VARIABLES.NUM_COPPIE,\n        tag: TEXT_TYPE.PARAGRAPH\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonField, {\n      title: \"New Game\",\n      onClick: initGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      nextTurn: nextTurn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Iv3kYGPUlKMcubyLFHT9qZpUUJs=\", false, function () {\n  return [useGameInfo];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createContext","useEffect","useState","Board","ButtonField","PageContent","TextField","TEXT_TYPE","VARIABLES","useGameInfo","gameService","jsxDEV","_jsxDEV","GameContext","App","_s","cards","setCards","turns","setTurns","couplesFound","setCouplesFound","setChoiceOne","setChoiceTwo","initGame","shuffleCards","nextTurn","prevTurns","console","log","children","text","tag","TITLE","fileName","_jsxFileName","lineNumber","columnNumber","className","PARAGRAPH","NUM_COPPIE","title","onClick","_c","$RefreshReg$"],"sources":["/Users/lorenzofranceschi/Projects/MemoryGame/memory/src/App.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Board from \"./components/BoardCompoent/Board\";\nimport ButtonField from \"./components/ButtonFieldComponent/ButtonField\";\nimport PageContent from \"./components/PageContentComponent/PageContent\";\nimport TextField from \"./components/TextFieldComponent/TextField\";\nimport { TEXT_TYPE, VARIABLES } from \"./config/variables\";\nimport { useGameInfo } from \"./context/GameContext\";\nimport gameService from \"./services/gameService\";\n\nexport const GameContext = createContext();\n\nfunction App() {\n  const {\n    cards,\n    setCards,\n    turns,\n    setTurns,\n    couplesFound,\n    setCouplesFound,\n\n    setChoiceOne,\n\n    setChoiceTwo,\n  } = useGameInfo();\n\n  const initGame = () => {\n    setCards(gameService.shuffleCards());\n    setCouplesFound(0);\n    setTurns(0);\n    setChoiceOne(null);\n    setChoiceTwo(null);\n  };\n\n  const nextTurn = () => {\n    setTurns((prevTurns) => prevTurns + 1);\n  };\n\n  useEffect(() => {\n    initGame();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"CARDS: \", cards);\n  }, [cards]);\n\n  return (\n    <PageContent>\n      <TextField text={\"MEMORY\"} tag={TEXT_TYPE.TITLE} />\n      <div className=\"info\">\n        <TextField text={\"#Turn: \" + turns} tag={TEXT_TYPE.PARAGRAPH} />\n        <TextField\n          text={\"#Couple found: \" + couplesFound + \"/\" + VARIABLES.NUM_COPPIE}\n          tag={TEXT_TYPE.PARAGRAPH}\n        />\n      </div>\n\n      <ButtonField title={\"New Game\"} onClick={initGame} />\n      <Board nextTurn={nextTurn} />\n    </PageContent>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,kCAAkC;AACpD,OAAOC,WAAW,MAAM,+CAA+C;AACvE,OAAOC,WAAW,MAAM,+CAA+C;AACvE,OAAOC,SAAS,MAAM,2CAA2C;AACjE,SAASC,SAAS,EAAEC,SAAS,QAAQ,oBAAoB;AACzD,SAASC,WAAW,QAAQ,uBAAuB;AACnD,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,MAAMC,WAAW,gBAAGb,aAAa,EAAE;AAE1C,SAASc,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IACJC,KAAK;IACLC,QAAQ;IACRC,KAAK;IACLC,QAAQ;IACRC,YAAY;IACZC,eAAe;IAEfC,YAAY;IAEZC;EACF,CAAC,GAAGd,WAAW,EAAE;EAEjB,MAAMe,QAAQ,GAAGA,CAAA,KAAM;IACrBP,QAAQ,CAACP,WAAW,CAACe,YAAY,EAAE,CAAC;IACpCJ,eAAe,CAAC,CAAC,CAAC;IAClBF,QAAQ,CAAC,CAAC,CAAC;IACXG,YAAY,CAAC,IAAI,CAAC;IAClBC,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACrBP,QAAQ,CAAEQ,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EACxC,CAAC;EAED1B,SAAS,CAAC,MAAM;IACduB,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACd2B,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEb,KAAK,CAAC;EAC/B,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEJ,OAAA,CAACP,WAAW;IAAAyB,QAAA,gBACVlB,OAAA,CAACN,SAAS;MAACyB,IAAI,EAAE,QAAS;MAACC,GAAG,EAAEzB,SAAS,CAAC0B;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACnDzB,OAAA;MAAK0B,SAAS,EAAC,MAAM;MAAAR,QAAA,gBACnBlB,OAAA,CAACN,SAAS;QAACyB,IAAI,EAAE,SAAS,GAAGb,KAAM;QAACc,GAAG,EAAEzB,SAAS,CAACgC;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAChEzB,OAAA,CAACN,SAAS;QACRyB,IAAI,EAAE,iBAAiB,GAAGX,YAAY,GAAG,GAAG,GAAGZ,SAAS,CAACgC,UAAW;QACpER,GAAG,EAAEzB,SAAS,CAACgC;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eAENzB,OAAA,CAACR,WAAW;MAACqC,KAAK,EAAE,UAAW;MAACC,OAAO,EAAElB;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrDzB,OAAA,CAACT,KAAK;MAACuB,QAAQ,EAAEA;IAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjB;AAElB;AAACtB,EAAA,CAjDQD,GAAG;EAAA,QAYNL,WAAW;AAAA;AAAAkC,EAAA,GAZR7B,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/lorenzofranceschi/Projects/MemoryGame/memory/src/components/BoardCompoent/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"../CardComponent/Card\";\nimport \"./Board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board(_ref) {\n  _s();\n  let {\n    cards,\n    nextTurn\n  } = _ref;\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const handleChoice = card => {\n    console.log(card);\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n  const resetTurns = () => {\n    setChoiceOne(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-grid\",\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      card: card,\n      handleChoice: handleChoice\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"cjRkeKQz56m0+sIm7roVLdTD7Ao=\");\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","Board","_ref","_s","cards","nextTurn","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","handleChoice","card","console","log","resetTurns","className","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lorenzofranceschi/Projects/MemoryGame/memory/src/components/BoardCompoent/Board.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Card from \"../CardComponent/Card\";\nimport \"./Board.css\";\n\nexport default function Board({ cards, nextTurn }) {\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  const handleChoice = (card) => {\n    console.log(card);\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  const resetTurns = () => {\n    setChoiceOne(null);\n  };\n\n  return (\n    <div className=\"board-grid\">\n      {cards.map((card) => (\n        <Card key={card.id} card={card} handleChoice={handleChoice}></Card>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAC/C,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMa,YAAY,GAAIC,IAAI,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBL,SAAS,GAAGG,YAAY,CAACE,IAAI,CAAC,GAAGJ,YAAY,CAACI,IAAI,CAAC;EACrD,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvBP,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA;IAAKe,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBZ,KAAK,CAACa,GAAG,CAAEN,IAAI,iBACdX,OAAA,CAACF,IAAI;MAAea,IAAI,EAAEA,IAAK;MAACD,YAAY,EAAEA;IAAa,GAAhDC,IAAI,CAACO,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACnB,EAAA,CApBuBF,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
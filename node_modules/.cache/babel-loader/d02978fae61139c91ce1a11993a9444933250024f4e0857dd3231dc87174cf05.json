{"ast":null,"code":"var _jsxFileName = \"/Users/lorenzofranceschi/Projects/MemoryGame/memory/src/components/HeaderComponent/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useGameInfo } from \"../../context/GameContext\";\nimport TextField from \"../TextFieldComponent/TextField\";\nimport variableService from \"../../services/variableService\";\nimport ButtonField from \"../ButtonFieldComponent/ButtonField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header(_ref) {\n  _s();\n  let {\n    onRestartGame\n  } = _ref;\n  const {\n    couplesFound,\n    turns,\n    setLastAttempt,\n    setRecord\n  } = useGameInfo();\n  const [win, setWin] = useState(false);\n\n  //check if you win when a couple is found\n  useEffect(() => {\n    if (couplesFound === variableService.getCards().length) {\n      let old_record = window.sessionStorage.getItem(\"record\");\n      if (old_record >= turns) {\n        window.sessionStorage.setItem(\"record\", turns);\n        setre;\n      }\n      window.sessionStorage.setItem(\"last attempt\", turns);\n      setLastAttempt(turns);\n      setWin(true);\n      onRestartGame(true);\n    } else {\n      setWin(false);\n    }\n  }, [couplesFound]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      className: \"mt-2\",\n      text: variableService.getLabels().GAME_TITLE.toUpperCase(),\n      tag: variableService.getTextType().TITLE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-1 right-1\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"mt-0 mb-0\",\n        text: variableService.getLabels().NUM_COUPLES + \": \" + couplesFound + \"/\" + variableService.getCards().length,\n        tag: variableService.getTextType().PARAGRAPH\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"mt-0 mb-0\",\n        text: variableService.getLabels().NUM_TURN + \": \" + turns,\n        tag: variableService.getTextType().PARAGRAPH\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonField, {\n      className: \"absolute top-1 left-1\",\n      title: \"BACK\",\n      onClick: () => onRestartGame(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"dJAsHPxDHGkcNiyiUCoOZS5Nd6c=\", false, function () {\n  return [useGameInfo];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","useGameInfo","TextField","variableService","ButtonField","jsxDEV","_jsxDEV","Header","_ref","_s","onRestartGame","couplesFound","turns","setLastAttempt","setRecord","win","setWin","getCards","length","old_record","window","sessionStorage","getItem","setItem","setre","children","className","text","getLabels","GAME_TITLE","toUpperCase","tag","getTextType","TITLE","fileName","_jsxFileName","lineNumber","columnNumber","NUM_COUPLES","PARAGRAPH","NUM_TURN","title","onClick","_c","$RefreshReg$"],"sources":["/Users/lorenzofranceschi/Projects/MemoryGame/memory/src/components/HeaderComponent/Header.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useGameInfo } from \"../../context/GameContext\";\nimport TextField from \"../TextFieldComponent/TextField\";\nimport variableService from \"../../services/variableService\";\nimport ButtonField from \"../ButtonFieldComponent/ButtonField\";\n\nexport default function Header({ onRestartGame }) {\n  const { couplesFound, turns, setLastAttempt, setRecord } = useGameInfo();\n\n  const [win, setWin] = useState(false);\n\n  //check if you win when a couple is found\n  useEffect(() => {\n    if (couplesFound === variableService.getCards().length) {\n      let old_record = window.sessionStorage.getItem(\"record\");\n\n      if (old_record >= turns) {\n        window.sessionStorage.setItem(\"record\", turns);\n        setre;\n      }\n\n      window.sessionStorage.setItem(\"last attempt\", turns);\n      setLastAttempt(turns);\n      setWin(true);\n      onRestartGame(true);\n    } else {\n      setWin(false);\n    }\n  }, [couplesFound]);\n\n  return (\n    <div>\n      <TextField\n        className={\"mt-2\"}\n        text={variableService.getLabels().GAME_TITLE.toUpperCase()}\n        tag={variableService.getTextType().TITLE}\n      />\n      <div className={\"absolute top-1 right-1\"}>\n        <TextField\n          className={\"mt-0 mb-0\"}\n          text={\n            variableService.getLabels().NUM_COUPLES +\n            \": \" +\n            couplesFound +\n            \"/\" +\n            variableService.getCards().length\n          }\n          tag={variableService.getTextType().PARAGRAPH}\n        />\n        <TextField\n          className={\"mt-0 mb-0\"}\n          text={variableService.getLabels().NUM_TURN + \": \" + turns}\n          tag={variableService.getTextType().PARAGRAPH}\n        />\n      </div>\n\n      <ButtonField\n        className={\"absolute top-1 left-1\"}\n        title={\"BACK\"}\n        onClick={() => onRestartGame(false)}\n      />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAOC,SAAS,MAAM,iCAAiC;AACvD,OAAOC,eAAe,MAAM,gCAAgC;AAC5D,OAAOC,WAAW,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAc,CAAC,GAAAF,IAAA;EAC9C,MAAM;IAAEG,YAAY;IAAEC,KAAK;IAAEC,cAAc;IAAEC;EAAU,CAAC,GAAGb,WAAW,EAAE;EAExE,MAAM,CAACc,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAErC;EACAD,SAAS,CAAC,MAAM;IACd,IAAIY,YAAY,KAAKR,eAAe,CAACc,QAAQ,EAAE,CAACC,MAAM,EAAE;MACtD,IAAIC,UAAU,GAAGC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;MAExD,IAAIH,UAAU,IAAIP,KAAK,EAAE;QACvBQ,MAAM,CAACC,cAAc,CAACE,OAAO,CAAC,QAAQ,EAAEX,KAAK,CAAC;QAC9CY,KAAK;MACP;MAEAJ,MAAM,CAACC,cAAc,CAACE,OAAO,CAAC,cAAc,EAAEX,KAAK,CAAC;MACpDC,cAAc,CAACD,KAAK,CAAC;MACrBI,MAAM,CAAC,IAAI,CAAC;MACZN,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLM,MAAM,CAAC,KAAK,CAAC;IACf;EACF,CAAC,EAAE,CAACL,YAAY,CAAC,CAAC;EAElB,oBACEL,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACJ,SAAS;MACRwB,SAAS,EAAE,MAAO;MAClBC,IAAI,EAAExB,eAAe,CAACyB,SAAS,EAAE,CAACC,UAAU,CAACC,WAAW,EAAG;MAC3DC,GAAG,EAAE5B,eAAe,CAAC6B,WAAW,EAAE,CAACC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC,eACF/B,OAAA;MAAKoB,SAAS,EAAE,wBAAyB;MAAAD,QAAA,gBACvCnB,OAAA,CAACJ,SAAS;QACRwB,SAAS,EAAE,WAAY;QACvBC,IAAI,EACFxB,eAAe,CAACyB,SAAS,EAAE,CAACU,WAAW,GACvC,IAAI,GACJ3B,YAAY,GACZ,GAAG,GACHR,eAAe,CAACc,QAAQ,EAAE,CAACC,MAC5B;QACDa,GAAG,EAAE5B,eAAe,CAAC6B,WAAW,EAAE,CAACO;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7C,eACF/B,OAAA,CAACJ,SAAS;QACRwB,SAAS,EAAE,WAAY;QACvBC,IAAI,EAAExB,eAAe,CAACyB,SAAS,EAAE,CAACY,QAAQ,GAAG,IAAI,GAAG5B,KAAM;QAC1DmB,GAAG,EAAE5B,eAAe,CAAC6B,WAAW,EAAE,CAACO;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eAEN/B,OAAA,CAACF,WAAW;MACVsB,SAAS,EAAE,uBAAwB;MACnCe,KAAK,EAAE,MAAO;MACdC,OAAO,EAAEA,CAAA,KAAMhC,aAAa,CAAC,KAAK;IAAE;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAAC5B,EAAA,CAzDuBF,MAAM;EAAA,QAC+BN,WAAW;AAAA;AAAA0C,EAAA,GADhDpC,MAAM;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
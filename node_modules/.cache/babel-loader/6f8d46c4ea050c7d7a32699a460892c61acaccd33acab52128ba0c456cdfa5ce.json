{"ast":null,"code":"var _jsxFileName = \"/Users/lorenzofranceschi/Projects/MemoryGame/memory/src/components/BoardCompoent/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useGameInfo } from \"../../context/GameContext\";\nimport Card from \"../CardComponent/Card\";\nimport \"./Board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board(_ref) {\n  _s();\n  let {\n    nextTurn\n  } = _ref;\n  const {\n    cards,\n    setCards,\n    couplesFound,\n    setCouplesFound,\n    choiceOne,\n    setChoiceOne,\n    choiceTwo,\n    setChoiceTwo\n  } = useGameInfo();\n  const [disabled, setDisabled] = useState(false);\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n  const checkWin = () => {\n    let _win = true;\n    cards.forEach(card => {\n      console.log(card.matched);\n      if (!card.matched) {\n        _win = false;\n      }\n    });\n    return _win;\n  };\n  const resetTurns = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setDisabled(false);\n  };\n  const isMatch = () => {\n    setCouplesFound(couplesFound + 1);\n    setCards(prevCards => {\n      return prevCards.map(card => {\n        if (card.id === choiceOne.id) {\n          return {\n            ...card,\n            matched: true\n          };\n        } else {\n          return card;\n        }\n      });\n    });\n    resetTurns();\n  };\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      //with disabled true you cannot click the card\n      setDisabled(true);\n      //if the card id is equal to the porevious choice id\n      if (choiceOne.id === choiceTwo.id) {\n        isMatch();\n      } else {\n        setTimeout(() => resetTurns(), 1000);\n      }\n      nextTurn();\n    }\n  }, [choiceOne, choiceTwo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-grid\",\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      card: card,\n      handleChoice: handleChoice,\n      flipped: card === choiceOne || card === choiceTwo || card.matched,\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"9Kywgh0B6iFmRue2YuZrW+BRJ18=\", false, function () {\n  return [useGameInfo];\n});\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","useGameInfo","Card","jsxDEV","_jsxDEV","Board","_ref","_s","nextTurn","cards","setCards","couplesFound","setCouplesFound","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","handleChoice","card","checkWin","_win","forEach","console","log","matched","resetTurns","isMatch","prevCards","map","id","setTimeout","className","children","flipped","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lorenzofranceschi/Projects/MemoryGame/memory/src/components/BoardCompoent/Board.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useGameInfo } from \"../../context/GameContext\";\n\nimport Card from \"../CardComponent/Card\";\nimport \"./Board.css\";\n\nexport default function Board({ nextTurn }) {\n  const {\n    cards,\n    setCards,\n    couplesFound,\n    setCouplesFound,\n    choiceOne,\n    setChoiceOne,\n    choiceTwo,\n    setChoiceTwo,\n  } = useGameInfo();\n\n  const [disabled, setDisabled] = useState(false);\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  const checkWin = () => {\n    let _win = true;\n    cards.forEach((card) => {\n      console.log(card.matched);\n      if (!card.matched) {\n        _win = false;\n      }\n    });\n    return _win;\n  };\n\n  const resetTurns = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setDisabled(false);\n  };\n\n  const isMatch = () => {\n    setCouplesFound(couplesFound + 1);\n    setCards((prevCards) => {\n      return prevCards.map((card) => {\n        if (card.id === choiceOne.id) {\n          return { ...card, matched: true };\n        } else {\n          return card;\n        }\n      });\n    });\n    resetTurns();\n  };\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      //with disabled true you cannot click the card\n      setDisabled(true);\n      //if the card id is equal to the porevious choice id\n      if (choiceOne.id === choiceTwo.id) {\n        isMatch();\n      } else {\n        setTimeout(() => resetTurns(), 1000);\n      }\n      nextTurn();\n    }\n  }, [choiceOne, choiceTwo]);\n\n  return (\n    <div className=\"board-grid\">\n      {cards.map((card) => (\n        <Card\n          card={card}\n          handleChoice={handleChoice}\n          flipped={card === choiceOne || card === choiceTwo || card.matched}\n          disabled={disabled}\n        ></Card>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}